/*!
	\qmlproperty string Applet::name
	\brief The applet name
*/

/*!
	\qmlproperty string Applet::description
	\brief The applet description
*/

/*!
	\qmlproperty string Applet::codeUrl
	\brief The applet program URL
*/

/*!
	\qmlproperty string Applet::codeAddr
	\brief The address at which the applet program should be loaded
*/

/*!
	\qmlproperty string Applet::mailboxAddr
	\brief The address at which the applet mailbox is located
*/

/*!
	\qmlproperty string Applet::traceLevel
	\brief The trace level that will be set during applet initialization
*/

/*!
	\qmlproperty list<AppletCommand> Applet::commands
	\brief List of all supported commands for this applet
*/

/*!
	\qmlproperty string Applet::bufferAddr
	\brief The address at which the applet buffer is located
*/

/*!
	\qmlproperty string Applet::bufferSize
	\brief The size of the applet buffer in bytes
*/

/*!
	\qmlproperty string Applet::bufferPages
	\brief The size of the applet buffer in pages
*/

/*!
	\qmlproperty string Applet::pageSize
	\brief The size of a page in bytes
*/

/*!
	\qmlproperty string Applet::memorySize
	\brief The total memory size in bytes
*/

/*!
	\qmlproperty string Applet::memoryPages
	\brief The total memory size in pages
*/

/*!
	\qmlproperty string Applet::eraseSupport
	\brief The supported memory erase sizes in pages
	This property contains a bitfield of the supported erase sizes. For
	example a memory with 512-bytes pages that supports 4KB (8 pages) and
	32KB (64 pages) will report an erase support value of 72.
*/

/*!
	\qmlproperty string Applet::paddingByte
	\brief The byte value that will be used to pad data when writing data
	that is not a round number of pages. Default is 0xff.
*/

/*!
	\qmlproperty string Applet::trimPadding
	\brief If true, empty pages at end of an erase block will not be written.
	This feature is used for NAND memories and will only work if only one
	erase block size is supported.
*/

/*!
	\qmlmethod bool Applet::hasCommand(string name)
	\brief Checks if a given command is supported by the applet.
*/

/*!
	\qmlmethod AppletCommand Applet::command(string name)
	\brief Retrieve a command from the list of supported commands. If the
	command name is not found, returns \a undefined.
*/
